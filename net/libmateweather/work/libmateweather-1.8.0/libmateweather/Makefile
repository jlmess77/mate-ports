# Makefile.in generated by automake 1.14.1 from Makefile.am.
# libmateweather/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libmateweather
pkgincludedir = $(includedir)/libmateweather
pkglibdir = $(libdir)/libmateweather
pkglibexecdir = $(libexecdir)/libmateweather
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = amd64-portbld-freebsd10.0
host_triplet = amd64-portbld-freebsd10.0
#am__append_1 = mateweather-win32.c
noinst_PROGRAMS = test_metar$(EXEEXT) test_locations$(EXEEXT) \
	test_sun_moon$(EXEEXT)
EXTRA_PROGRAMS = test_metar$(EXEEXT) test_sun_moon$(EXEEXT)
subdir = libmateweather
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/mateweather.pc.in \
	$(srcdir)/mateweather-uninstalled.pc.in $(top_srcdir)/depcomp \
	$(libmateweatherinc_HEADERS) $(noinst_HEADERS) AUTHORS README
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = mateweather.pc mateweather-uninstalled.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(libmateweatherincdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libmateweather_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libmateweather_la_SOURCES_DIST = weather.c weather.h \
	weather-priv.h weather-metar.c weather-iwin.c weather-met.c \
	weather-bom.c weather-wx.c weather-sun.c weather-moon.c \
	mateweather-enum-types.c mateweather-prefs.c \
	mateweather-prefs.h mateweather-xml.c mateweather-xml.h \
	mateweather-location.c mateweather-location.h \
	mateweather-timezone.c mateweather-timezone.h \
	mateweather-win32.h location-entry.c location-entry.h \
	timezone-menu.c timezone-menu.h parser.c parser.h \
	mateweather-win32.c
#am__objects_1 = libmateweather_la-mateweather-win32.lo
am_libmateweather_la_OBJECTS = libmateweather_la-weather.lo \
	libmateweather_la-weather-metar.lo \
	libmateweather_la-weather-iwin.lo \
	libmateweather_la-weather-met.lo \
	libmateweather_la-weather-bom.lo \
	libmateweather_la-weather-wx.lo \
	libmateweather_la-weather-sun.lo \
	libmateweather_la-weather-moon.lo \
	libmateweather_la-mateweather-enum-types.lo \
	libmateweather_la-mateweather-prefs.lo \
	libmateweather_la-mateweather-xml.lo \
	libmateweather_la-mateweather-location.lo \
	libmateweather_la-mateweather-timezone.lo \
	libmateweather_la-location-entry.lo \
	libmateweather_la-timezone-menu.lo libmateweather_la-parser.lo \
	$(am__objects_1)
am__EXTRA_libmateweather_la_SOURCES_DIST = mateweather-win32.c
libmateweather_la_OBJECTS = $(am_libmateweather_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libmateweather_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libmateweather_la_CFLAGS) $(CFLAGS) \
	$(libmateweather_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(noinst_PROGRAMS)
am_test_locations_OBJECTS = test_locations-test_locations.$(OBJEXT)
test_locations_OBJECTS = $(am_test_locations_OBJECTS)
test_locations_DEPENDENCIES = libmateweather.la $(am__DEPENDENCIES_1)
test_locations_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_locations_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_test_metar_OBJECTS = test_metar-test_metar.$(OBJEXT)
test_metar_OBJECTS = $(am_test_metar_OBJECTS)
test_metar_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libmateweather.la
test_metar_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_metar_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_sun_moon_OBJECTS = test_sun_moon-test_sun_moon.$(OBJEXT)
test_sun_moon_OBJECTS = $(am_test_sun_moon_OBJECTS)
test_sun_moon_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libmateweather.la
test_sun_moon_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_sun_moon_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmateweather_la_SOURCES) \
	$(EXTRA_libmateweather_la_SOURCES) $(test_locations_SOURCES) \
	$(test_metar_SOURCES) $(test_sun_moon_SOURCES)
DIST_SOURCES = $(am__libmateweather_la_SOURCES_DIST) \
	$(am__EXTRA_libmateweather_la_SOURCES_DIST) \
	$(test_locations_SOURCES) $(test_metar_SOURCES) \
	$(test_sun_moon_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(libmateweatherinc_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/missing aclocal-1.14
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/missing autoconf
AUTOHEADER = ${SHELL} /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/missing autoheader
AUTOMAKE = ${SHELL} /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/missing automake-1.14
AWK = /usr/bin/awk
CATALOGS = 
CATOBJEXT = .gmo
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS = -O2 -pipe -fno-strict-aliasing -DG_DISABLE_SINGLE_INCLUDES
COMPRESS_EXT = 
CPP = cpp
CPPFLAGS = -I/usr/local/include
CYGPATH_W = echo
DATADIR = 
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_DEPRECATED = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/egrep
EXEEXT = 
FGREP = /usr/bin/fgrep
GETTEXT_PACKAGE = libmateweather
GIO_CFLAGS = -pthread -I/usr/local/include/glib-2.0 -I/usr/local/include  
GIO_LIBS = -lgio-2.0 -lgobject-2.0 -L/usr/local/lib -lglib-2.0 -lintl  
GLADEDIR = 
GLIB_CFLAGS = -I/usr/local/include/glib-2.0 -I/usr/local/include  
GLIB_COMPILE_RESOURCES = glib-compile-resources
GLIB_COMPILE_SCHEMAS = glib-compile-schemas
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/usr/local/lib -lglib-2.0 -lintl  
GLIB_MKENUMS = glib-mkenums
GMOFILES = 
GMSGFMT = /usr/local/bin/msgfmt
GOBJECT_QUERY = gobject-query
GREP = /usr/bin/grep
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
GTKDOC_CHECK = gtkdoc-check.test
GTKDOC_CHECK_PATH = /usr/local/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = -I/usr/local/include/glib-2.0 -I/usr/local/include  
GTKDOC_DEPS_LIBS = -lgobject-2.0 -L/usr/local/lib -lglib-2.0 -lintl  
GTKDOC_MKPDF = /usr/local/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /usr/local/bin/gtkdoc-rebase
GTK_API_VERSION = 2.0
GTK_CFLAGS = -I/usr/local/include/gtk-2.0 -I/usr/local/include/gio-unix-2.0/ -I/usr/local/include/atk-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -D_THREAD_SAFE -I/usr/local/include/gdk-pixbuf-2.0 -I/usr/local/include/libpng15 -I/usr/local/include/pango-1.0 -pthread -I/usr/local/include/glib-2.0 -I/usr/local/include  -I/usr/local/include/freetype2 -I/usr/local/include/harfbuzz   -DGTK_DISABLE_SINGLE_INCLUDES
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -lXext -lXrender -lXinerama -lXi -lXrandr -lXcursor -lXcomposite -lXdamage -lXfixes -lX11 -latk-1.0 -lcairo -pthread -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lintl -lfontconfig -L/usr/local/lib -lfreetype  
HTML_DIR = /usr/local/share/doc
INSTALL = /usr/bin/install -c -o root -g wheel
INSTALL_DATA = install  -o root -g wheel -m 444
INSTALL_PROGRAM = install  -s -o root -g wheel -m 555
INSTALL_SCRIPT = install  -o root -g wheel -m 555
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = -lintl 
INTLTOOL_EXTRACT = /usr/local/bin/intltool-extract
INTLTOOL_MERGE = /usr/local/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/local/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
LD = /usr/bin/ld
LDFLAGS =  -L/usr/local/lib
LIBDIR = 
LIBOBJS = 
LIBS = 
LIBSOUP_CFLAGS = -I/usr/local/include/libsoup-2.4 -pthread -I/usr/local/include/glib-2.0 -I/usr/local/include -I/usr/local/include/libxml2  
LIBSOUP_LIBS = -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -L/usr/local/lib -lglib-2.0 -lintl  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML_CFLAGS = -I/usr/local/include/libxml2  
LIBXML_LIBS = -L/usr/local/lib -lxml2  
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_VERSION = 7:9:6
MAINT = #
MAKEINFO = ${SHELL} /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/local/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/local/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libmateweather
PACKAGE_BUGREPORT = http://www.mate-desktop.org
PACKAGE_NAME = libmateweather
PACKAGE_STRING = libmateweather 1.8.0
PACKAGE_TARNAME = libmateweather
PACKAGE_URL = 
PACKAGE_VERSION = 1.8.0
PATH_SEPARATOR = :
PKG_CONFIG = pkgconf
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYGOBJECT_CFLAGS = 
PYGOBJECT_LIBS = 
PYGTK_DEFS = 
PYTHON = 
PYTHONDIR = 
PYTHON_EXEC_PREFIX = 
PYTHON_INCLUDES = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_VERSION = 
RANLIB = ranlib
REGEX_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UPDATE_ICON_CACHE = /usr/local/bin/gtk-update-icon-cache
USE_NLS = yes
VERSION = 1.8.0
WARN_CFLAGS = -Wall -Wmissing-prototypes 
XGETTEXT = /usr/local/bin/xgettext
abs_builddir = /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/libmateweather
abs_srcdir = /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/libmateweather
abs_top_builddir = /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0
abs_top_srcdir = /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0
ac_ct_AR = ar
ac_ct_CC = cc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = amd64-portbld-freebsd10.0
build_alias = amd64-portbld-freebsd10.0
build_cpu = amd64
build_os = freebsd10.0
build_vendor = portbld
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host = amd64-portbld-freebsd10.0
host_alias = 
host_cpu = amd64
host_os = freebsd10.0
host_vendor = portbld
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/local/info
install_sh = ${SHELL} /usr/home/ericbsd/mate-ports/net/libmateweather/work/libmateweather-1.8.0/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = /usr/local/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = libmateweather.la
libmateweatherincdir = $(includedir)/libmateweather
mateweather_old_headers = \
	weather.h mateweather-prefs.h mateweather-xml.h

mateweather_new_headers = \
	mateweather-location.h location-entry.h \
	mateweather-timezone.h timezone-menu.h

libmateweatherinc_HEADERS = \
	$(mateweather_old_headers)		\
	$(mateweather_new_headers)		\
	mateweather-enum-types.h

pkgconfigdir = $(prefix)/libdata/pkgconfig
pkgconfig_DATA = mateweather.pc
libmateweather_la_SOURCES = weather.c weather.h weather-priv.h \
	weather-metar.c weather-iwin.c weather-met.c weather-bom.c \
	weather-wx.c weather-sun.c weather-moon.c \
	mateweather-enum-types.c mateweather-prefs.c \
	mateweather-prefs.h mateweather-xml.c mateweather-xml.h \
	mateweather-location.c mateweather-location.h \
	mateweather-timezone.c mateweather-timezone.h \
	mateweather-win32.h location-entry.c location-entry.h \
	timezone-menu.c timezone-menu.h parser.c parser.h \
	$(am__append_1)
EXTRA_libmateweather_la_SOURCES = mateweather-win32.c
libmateweather_la_CFLAGS = \
	-I$(top_srcdir)			\
	-I$(srcdir)			\
	$(WARN_CFLAGS)			\
	$(GTK_CFLAGS)			\
	$(LIBXML_CFLAGS)		\
	$(LIBSOUP_CFLAGS)		\
	$(GIO_CFLAGS)			\
	-DG_LOG_DOMAIN=\"MateWeather\"	\
	-DMATELOCALEDIR=\""$(datadir)/locale"\" \
	-DMATEWEATHER_XML_LOCATION_DIR=\""$(pkgdatadir)"\"

libmateweather_la_LIBADD = \
	-lm		\
	$(GTK_LIBS)	\
	$(LIBXML_LIBS)	\
	$(LIBSOUP_LIBS)	\
	$(GIO_LIBS) \
	$(REGEX_LIBS)

libmateweather_la_LDFLAGS = \
	-version-info $(LT_VERSION) -no-undefined


# something is wrong with glib-mkenums, please research the issue
MKENUMS_GENERATED = mateweather-enum-types.c mateweather-enum-types.h
#	$(AM_V_GEN)( cd $(srcdir) && $(GLIB_MKENUMS) --template mateweather-enum-types.c.tmpl \
#		$(mateweather_new_headers) ) > mateweather-enum-types.c.tmp \
#	&& mv mateweather-enum-types.c.tmp mateweather-enum-types.c \
#	|| rm -f mateweather-enum-type.c.tmp
BUILT_SOURCES = $(MKENUMS_GENERATED)
test_metar_SOURCES = test_metar.c
test_metar_CFLAGS = \
	-I$(top_srcdir)			\
	-I$(srcdir)			\
	$(WARN_CFLAGS)			\
	$(GTK_CFLAGS)			\
	$(LIBSOUP_CFLAGS)		\
	-DG_LOG_DOMAIN=\"MateWeather\"

test_metar_LDADD = \
	$(GTK_LIBS) \
	$(LIBSOUP_LIBS)	\
	$(REGEX_LIBS) \
	libmateweather.la

test_locations_SOURCES = test_locations.c
test_locations_CFLAGS = \
	-I$(top_srcdir)			\
	-I$(srcdir)			\
	$(WARN_CFLAGS)			\
	$(GTK_CFLAGS)			\
	$(MATE_VFS_APPLETS_CFLAGS)	\
	-DG_LOG_DOMAIN=\"MateWeather\"

test_locations_LDADD = libmateweather.la $(GTK_LIBS)
test_sun_moon_SOURCES = \
	test_sun_moon.c

test_sun_moon_CFLAGS = \
	-I$(top_srcdir)			\
	-I$(srcdir)			\
	$(WARN_CFLAGS)			\
	$(GTK_CFLAGS)			\
	$(LIBSOUP_CFLAGS)		\
	-DG_LOG_DOMAIN=\"MateWeather\"

test_sun_moon_LDADD = \
	$(GTK_LIBS)	\
	$(LIBSOUP_LIBS)	\
	-lm	\
	libmateweather.la

noinst_HEADERS = weather-priv.h mateweather-win32.h
gsettings_SCHEMAS = org.mate.weather.gschema.xml
EXTRA_DIST = mateweather.pc.in mateweather-uninstalled.pc.in $(gsettings_SCHEMAS).in.in
CLEANFILES = $(EXTRA_PROGRAMS) $(gsettings_SCHEMAS).in $(gsettings_SCHEMAS) *.gschema.valid
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libmateweather/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libmateweather/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
mateweather.pc: $(top_builddir)/config.status $(srcdir)/mateweather.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
mateweather-uninstalled.pc: $(top_builddir)/config.status $(srcdir)/mateweather-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmateweather.la: $(libmateweather_la_OBJECTS) $(libmateweather_la_DEPENDENCIES) $(EXTRA_libmateweather_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmateweather_la_LINK) -rpath $(libdir) $(libmateweather_la_OBJECTS) $(libmateweather_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

test_locations$(EXEEXT): $(test_locations_OBJECTS) $(test_locations_DEPENDENCIES) $(EXTRA_test_locations_DEPENDENCIES) 
	@rm -f test_locations$(EXEEXT)
	$(AM_V_CCLD)$(test_locations_LINK) $(test_locations_OBJECTS) $(test_locations_LDADD) $(LIBS)

test_metar$(EXEEXT): $(test_metar_OBJECTS) $(test_metar_DEPENDENCIES) $(EXTRA_test_metar_DEPENDENCIES) 
	@rm -f test_metar$(EXEEXT)
	$(AM_V_CCLD)$(test_metar_LINK) $(test_metar_OBJECTS) $(test_metar_LDADD) $(LIBS)

test_sun_moon$(EXEEXT): $(test_sun_moon_OBJECTS) $(test_sun_moon_DEPENDENCIES) $(EXTRA_test_sun_moon_DEPENDENCIES) 
	@rm -f test_sun_moon$(EXEEXT)
	$(AM_V_CCLD)$(test_sun_moon_LINK) $(test_sun_moon_OBJECTS) $(test_sun_moon_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libmateweather_la-location-entry.Plo
include ./$(DEPDIR)/libmateweather_la-mateweather-enum-types.Plo
include ./$(DEPDIR)/libmateweather_la-mateweather-location.Plo
include ./$(DEPDIR)/libmateweather_la-mateweather-prefs.Plo
include ./$(DEPDIR)/libmateweather_la-mateweather-timezone.Plo
include ./$(DEPDIR)/libmateweather_la-mateweather-win32.Plo
include ./$(DEPDIR)/libmateweather_la-mateweather-xml.Plo
include ./$(DEPDIR)/libmateweather_la-parser.Plo
include ./$(DEPDIR)/libmateweather_la-timezone-menu.Plo
include ./$(DEPDIR)/libmateweather_la-weather-bom.Plo
include ./$(DEPDIR)/libmateweather_la-weather-iwin.Plo
include ./$(DEPDIR)/libmateweather_la-weather-met.Plo
include ./$(DEPDIR)/libmateweather_la-weather-metar.Plo
include ./$(DEPDIR)/libmateweather_la-weather-moon.Plo
include ./$(DEPDIR)/libmateweather_la-weather-sun.Plo
include ./$(DEPDIR)/libmateweather_la-weather-wx.Plo
include ./$(DEPDIR)/libmateweather_la-weather.Plo
include ./$(DEPDIR)/test_locations-test_locations.Po
include ./$(DEPDIR)/test_metar-test_metar.Po
include ./$(DEPDIR)/test_sun_moon-test_sun_moon.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libmateweather_la-weather.lo: weather.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather.Tpo -c -o libmateweather_la-weather.lo `test -f 'weather.c' || echo '$(srcdir)/'`weather.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather.Tpo $(DEPDIR)/libmateweather_la-weather.Plo
#	$(AM_V_CC)source='weather.c' object='libmateweather_la-weather.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather.lo `test -f 'weather.c' || echo '$(srcdir)/'`weather.c

libmateweather_la-weather-metar.lo: weather-metar.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather-metar.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather-metar.Tpo -c -o libmateweather_la-weather-metar.lo `test -f 'weather-metar.c' || echo '$(srcdir)/'`weather-metar.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather-metar.Tpo $(DEPDIR)/libmateweather_la-weather-metar.Plo
#	$(AM_V_CC)source='weather-metar.c' object='libmateweather_la-weather-metar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather-metar.lo `test -f 'weather-metar.c' || echo '$(srcdir)/'`weather-metar.c

libmateweather_la-weather-iwin.lo: weather-iwin.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather-iwin.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather-iwin.Tpo -c -o libmateweather_la-weather-iwin.lo `test -f 'weather-iwin.c' || echo '$(srcdir)/'`weather-iwin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather-iwin.Tpo $(DEPDIR)/libmateweather_la-weather-iwin.Plo
#	$(AM_V_CC)source='weather-iwin.c' object='libmateweather_la-weather-iwin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather-iwin.lo `test -f 'weather-iwin.c' || echo '$(srcdir)/'`weather-iwin.c

libmateweather_la-weather-met.lo: weather-met.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather-met.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather-met.Tpo -c -o libmateweather_la-weather-met.lo `test -f 'weather-met.c' || echo '$(srcdir)/'`weather-met.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather-met.Tpo $(DEPDIR)/libmateweather_la-weather-met.Plo
#	$(AM_V_CC)source='weather-met.c' object='libmateweather_la-weather-met.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather-met.lo `test -f 'weather-met.c' || echo '$(srcdir)/'`weather-met.c

libmateweather_la-weather-bom.lo: weather-bom.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather-bom.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather-bom.Tpo -c -o libmateweather_la-weather-bom.lo `test -f 'weather-bom.c' || echo '$(srcdir)/'`weather-bom.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather-bom.Tpo $(DEPDIR)/libmateweather_la-weather-bom.Plo
#	$(AM_V_CC)source='weather-bom.c' object='libmateweather_la-weather-bom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather-bom.lo `test -f 'weather-bom.c' || echo '$(srcdir)/'`weather-bom.c

libmateweather_la-weather-wx.lo: weather-wx.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather-wx.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather-wx.Tpo -c -o libmateweather_la-weather-wx.lo `test -f 'weather-wx.c' || echo '$(srcdir)/'`weather-wx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather-wx.Tpo $(DEPDIR)/libmateweather_la-weather-wx.Plo
#	$(AM_V_CC)source='weather-wx.c' object='libmateweather_la-weather-wx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather-wx.lo `test -f 'weather-wx.c' || echo '$(srcdir)/'`weather-wx.c

libmateweather_la-weather-sun.lo: weather-sun.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather-sun.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather-sun.Tpo -c -o libmateweather_la-weather-sun.lo `test -f 'weather-sun.c' || echo '$(srcdir)/'`weather-sun.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather-sun.Tpo $(DEPDIR)/libmateweather_la-weather-sun.Plo
#	$(AM_V_CC)source='weather-sun.c' object='libmateweather_la-weather-sun.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather-sun.lo `test -f 'weather-sun.c' || echo '$(srcdir)/'`weather-sun.c

libmateweather_la-weather-moon.lo: weather-moon.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-weather-moon.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-weather-moon.Tpo -c -o libmateweather_la-weather-moon.lo `test -f 'weather-moon.c' || echo '$(srcdir)/'`weather-moon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-weather-moon.Tpo $(DEPDIR)/libmateweather_la-weather-moon.Plo
#	$(AM_V_CC)source='weather-moon.c' object='libmateweather_la-weather-moon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-weather-moon.lo `test -f 'weather-moon.c' || echo '$(srcdir)/'`weather-moon.c

libmateweather_la-mateweather-enum-types.lo: mateweather-enum-types.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-mateweather-enum-types.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-mateweather-enum-types.Tpo -c -o libmateweather_la-mateweather-enum-types.lo `test -f 'mateweather-enum-types.c' || echo '$(srcdir)/'`mateweather-enum-types.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-mateweather-enum-types.Tpo $(DEPDIR)/libmateweather_la-mateweather-enum-types.Plo
#	$(AM_V_CC)source='mateweather-enum-types.c' object='libmateweather_la-mateweather-enum-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-mateweather-enum-types.lo `test -f 'mateweather-enum-types.c' || echo '$(srcdir)/'`mateweather-enum-types.c

libmateweather_la-mateweather-prefs.lo: mateweather-prefs.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-mateweather-prefs.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-mateweather-prefs.Tpo -c -o libmateweather_la-mateweather-prefs.lo `test -f 'mateweather-prefs.c' || echo '$(srcdir)/'`mateweather-prefs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-mateweather-prefs.Tpo $(DEPDIR)/libmateweather_la-mateweather-prefs.Plo
#	$(AM_V_CC)source='mateweather-prefs.c' object='libmateweather_la-mateweather-prefs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-mateweather-prefs.lo `test -f 'mateweather-prefs.c' || echo '$(srcdir)/'`mateweather-prefs.c

libmateweather_la-mateweather-xml.lo: mateweather-xml.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-mateweather-xml.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-mateweather-xml.Tpo -c -o libmateweather_la-mateweather-xml.lo `test -f 'mateweather-xml.c' || echo '$(srcdir)/'`mateweather-xml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-mateweather-xml.Tpo $(DEPDIR)/libmateweather_la-mateweather-xml.Plo
#	$(AM_V_CC)source='mateweather-xml.c' object='libmateweather_la-mateweather-xml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-mateweather-xml.lo `test -f 'mateweather-xml.c' || echo '$(srcdir)/'`mateweather-xml.c

libmateweather_la-mateweather-location.lo: mateweather-location.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-mateweather-location.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-mateweather-location.Tpo -c -o libmateweather_la-mateweather-location.lo `test -f 'mateweather-location.c' || echo '$(srcdir)/'`mateweather-location.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-mateweather-location.Tpo $(DEPDIR)/libmateweather_la-mateweather-location.Plo
#	$(AM_V_CC)source='mateweather-location.c' object='libmateweather_la-mateweather-location.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-mateweather-location.lo `test -f 'mateweather-location.c' || echo '$(srcdir)/'`mateweather-location.c

libmateweather_la-mateweather-timezone.lo: mateweather-timezone.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-mateweather-timezone.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-mateweather-timezone.Tpo -c -o libmateweather_la-mateweather-timezone.lo `test -f 'mateweather-timezone.c' || echo '$(srcdir)/'`mateweather-timezone.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-mateweather-timezone.Tpo $(DEPDIR)/libmateweather_la-mateweather-timezone.Plo
#	$(AM_V_CC)source='mateweather-timezone.c' object='libmateweather_la-mateweather-timezone.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-mateweather-timezone.lo `test -f 'mateweather-timezone.c' || echo '$(srcdir)/'`mateweather-timezone.c

libmateweather_la-location-entry.lo: location-entry.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-location-entry.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-location-entry.Tpo -c -o libmateweather_la-location-entry.lo `test -f 'location-entry.c' || echo '$(srcdir)/'`location-entry.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-location-entry.Tpo $(DEPDIR)/libmateweather_la-location-entry.Plo
#	$(AM_V_CC)source='location-entry.c' object='libmateweather_la-location-entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-location-entry.lo `test -f 'location-entry.c' || echo '$(srcdir)/'`location-entry.c

libmateweather_la-timezone-menu.lo: timezone-menu.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-timezone-menu.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-timezone-menu.Tpo -c -o libmateweather_la-timezone-menu.lo `test -f 'timezone-menu.c' || echo '$(srcdir)/'`timezone-menu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-timezone-menu.Tpo $(DEPDIR)/libmateweather_la-timezone-menu.Plo
#	$(AM_V_CC)source='timezone-menu.c' object='libmateweather_la-timezone-menu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-timezone-menu.lo `test -f 'timezone-menu.c' || echo '$(srcdir)/'`timezone-menu.c

libmateweather_la-parser.lo: parser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-parser.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-parser.Tpo -c -o libmateweather_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-parser.Tpo $(DEPDIR)/libmateweather_la-parser.Plo
#	$(AM_V_CC)source='parser.c' object='libmateweather_la-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c

libmateweather_la-mateweather-win32.lo: mateweather-win32.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -MT libmateweather_la-mateweather-win32.lo -MD -MP -MF $(DEPDIR)/libmateweather_la-mateweather-win32.Tpo -c -o libmateweather_la-mateweather-win32.lo `test -f 'mateweather-win32.c' || echo '$(srcdir)/'`mateweather-win32.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmateweather_la-mateweather-win32.Tpo $(DEPDIR)/libmateweather_la-mateweather-win32.Plo
#	$(AM_V_CC)source='mateweather-win32.c' object='libmateweather_la-mateweather-win32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmateweather_la_CFLAGS) $(CFLAGS) -c -o libmateweather_la-mateweather-win32.lo `test -f 'mateweather-win32.c' || echo '$(srcdir)/'`mateweather-win32.c

test_locations-test_locations.o: test_locations.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locations_CFLAGS) $(CFLAGS) -MT test_locations-test_locations.o -MD -MP -MF $(DEPDIR)/test_locations-test_locations.Tpo -c -o test_locations-test_locations.o `test -f 'test_locations.c' || echo '$(srcdir)/'`test_locations.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_locations-test_locations.Tpo $(DEPDIR)/test_locations-test_locations.Po
#	$(AM_V_CC)source='test_locations.c' object='test_locations-test_locations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locations_CFLAGS) $(CFLAGS) -c -o test_locations-test_locations.o `test -f 'test_locations.c' || echo '$(srcdir)/'`test_locations.c

test_locations-test_locations.obj: test_locations.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locations_CFLAGS) $(CFLAGS) -MT test_locations-test_locations.obj -MD -MP -MF $(DEPDIR)/test_locations-test_locations.Tpo -c -o test_locations-test_locations.obj `if test -f 'test_locations.c'; then $(CYGPATH_W) 'test_locations.c'; else $(CYGPATH_W) '$(srcdir)/test_locations.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_locations-test_locations.Tpo $(DEPDIR)/test_locations-test_locations.Po
#	$(AM_V_CC)source='test_locations.c' object='test_locations-test_locations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locations_CFLAGS) $(CFLAGS) -c -o test_locations-test_locations.obj `if test -f 'test_locations.c'; then $(CYGPATH_W) 'test_locations.c'; else $(CYGPATH_W) '$(srcdir)/test_locations.c'; fi`

test_metar-test_metar.o: test_metar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metar_CFLAGS) $(CFLAGS) -MT test_metar-test_metar.o -MD -MP -MF $(DEPDIR)/test_metar-test_metar.Tpo -c -o test_metar-test_metar.o `test -f 'test_metar.c' || echo '$(srcdir)/'`test_metar.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_metar-test_metar.Tpo $(DEPDIR)/test_metar-test_metar.Po
#	$(AM_V_CC)source='test_metar.c' object='test_metar-test_metar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metar_CFLAGS) $(CFLAGS) -c -o test_metar-test_metar.o `test -f 'test_metar.c' || echo '$(srcdir)/'`test_metar.c

test_metar-test_metar.obj: test_metar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metar_CFLAGS) $(CFLAGS) -MT test_metar-test_metar.obj -MD -MP -MF $(DEPDIR)/test_metar-test_metar.Tpo -c -o test_metar-test_metar.obj `if test -f 'test_metar.c'; then $(CYGPATH_W) 'test_metar.c'; else $(CYGPATH_W) '$(srcdir)/test_metar.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_metar-test_metar.Tpo $(DEPDIR)/test_metar-test_metar.Po
#	$(AM_V_CC)source='test_metar.c' object='test_metar-test_metar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metar_CFLAGS) $(CFLAGS) -c -o test_metar-test_metar.obj `if test -f 'test_metar.c'; then $(CYGPATH_W) 'test_metar.c'; else $(CYGPATH_W) '$(srcdir)/test_metar.c'; fi`

test_sun_moon-test_sun_moon.o: test_sun_moon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sun_moon_CFLAGS) $(CFLAGS) -MT test_sun_moon-test_sun_moon.o -MD -MP -MF $(DEPDIR)/test_sun_moon-test_sun_moon.Tpo -c -o test_sun_moon-test_sun_moon.o `test -f 'test_sun_moon.c' || echo '$(srcdir)/'`test_sun_moon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sun_moon-test_sun_moon.Tpo $(DEPDIR)/test_sun_moon-test_sun_moon.Po
#	$(AM_V_CC)source='test_sun_moon.c' object='test_sun_moon-test_sun_moon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sun_moon_CFLAGS) $(CFLAGS) -c -o test_sun_moon-test_sun_moon.o `test -f 'test_sun_moon.c' || echo '$(srcdir)/'`test_sun_moon.c

test_sun_moon-test_sun_moon.obj: test_sun_moon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sun_moon_CFLAGS) $(CFLAGS) -MT test_sun_moon-test_sun_moon.obj -MD -MP -MF $(DEPDIR)/test_sun_moon-test_sun_moon.Tpo -c -o test_sun_moon-test_sun_moon.obj `if test -f 'test_sun_moon.c'; then $(CYGPATH_W) 'test_sun_moon.c'; else $(CYGPATH_W) '$(srcdir)/test_sun_moon.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sun_moon-test_sun_moon.Tpo $(DEPDIR)/test_sun_moon-test_sun_moon.Po
#	$(AM_V_CC)source='test_sun_moon.c' object='test_sun_moon-test_sun_moon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sun_moon_CFLAGS) $(CFLAGS) -c -o test_sun_moon-test_sun_moon.obj `if test -f 'test_sun_moon.c'; then $(CYGPATH_W) 'test_sun_moon.c'; else $(CYGPATH_W) '$(srcdir)/test_sun_moon.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-libmateweatherincHEADERS: $(libmateweatherinc_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libmateweatherinc_HEADERS)'; test -n "$(libmateweatherincdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libmateweatherincdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libmateweatherincdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmateweatherincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmateweatherincdir)" || exit $$?; \
	done

uninstall-libmateweatherincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmateweatherinc_HEADERS)'; test -n "$(libmateweatherincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libmateweatherincdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(libmateweatherincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libmateweatherincHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-libmateweatherincHEADERS uninstall-pkgconfigDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libmateweatherincHEADERS install-man install-pdf \
	install-pdf-am install-pkgconfigDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-libmateweatherincHEADERS \
	uninstall-pkgconfigDATA


mateweather-enum-types.h: $(mateweather_new_headers)
#	$(AM_V_GEN)( cd $(srcdir) && $(GLIB_MKENUMS) --template mateweather-enum-types.h.tmpl \
#		$(mateweather_new_headers) ) > mateweather-enum-types.h.tmp \
#	&& mv mateweather-enum-types.h.tmp mateweather-enum-types.h \
#	|| rm -f mateweather-enum-type.h.tmp

mateweather-enum-types.c: $(libmateweatherinclude_HEADERS)

%.xml:       %.xml.in       $(INTLTOOL_MERGE) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -x -u --no-translations $< $@

.PHONY : uninstall-gsettings-schemas install-gsettings-schemas clean-gsettings-schemas

mostlyclean-am: clean-gsettings-schemas

gsettings__enum_file = $(addsuffix .enums.xml,$(gsettings_ENUM_NAMESPACE))

%.gschema.valid: %.gschema.xml $(gsettings__enum_file)
	$(AM_V_GEN) if test -f "$<"; then d=; else d="$(srcdir)/"; fi; $(GLIB_COMPILE_SCHEMAS) --strict --dry-run $(addprefix --schema-file=,$(gsettings__enum_file)) --schema-file=$${d}$< && touch $@

all-am: $(gsettings_SCHEMAS:.xml=.valid)
uninstall-am: uninstall-gsettings-schemas
install-data-am: install-gsettings-schemas

.SECONDARY: $(gsettings_SCHEMAS)

install-gsettings-schemas: $(gsettings_SCHEMAS) $(gsettings__enum_file)
	@$(NORMAL_INSTALL)
	if test -n "$^"; then \
		test -z "$(gsettingsschemadir)" || $(MKDIR_P) "$(DESTDIR)$(gsettingsschemadir)"; \
		$(INSTALL_DATA) $^ "$(DESTDIR)$(gsettingsschemadir)"; \
		test -n "$(GSETTINGS_DISABLE_SCHEMAS_COMPILE)$(DESTDIR)" || $(GLIB_COMPILE_SCHEMAS) $(gsettingsschemadir); \
	fi

uninstall-gsettings-schemas:
	@$(NORMAL_UNINSTALL)
	@list='$(gsettings_SCHEMAS) $(gsettings__enum_file)'; test -n "$(gsettingsschemadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gsettingsschemadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gsettingsschemadir)" && rm -f $$files
	test -n "$(GSETTINGS_DISABLE_SCHEMAS_COMPILE)$(DESTDIR)" || $(GLIB_COMPILE_SCHEMAS) $(gsettingsschemadir)

clean-gsettings-schemas:
	rm -f $(gsettings_SCHEMAS:.xml=.valid) $(gsettings__enum_file)

ifdef gsettings_ENUM_NAMESPACE
$(gsettings__enum_file): $(gsettings_ENUM_FILES)
	$(AM_V_GEN) glib-mkenums --comments '<!-- @comment@ -->' --fhead "<schemalist>" --vhead "  <@type@ id='$(gsettings_ENUM_NAMESPACE).@EnumName@'>" --vprod "    <value nick='@valuenick@' value='@valuenum@'/>" --vtail "  </@type@>" --ftail "</schemalist>" $^ > $@.tmp && mv $@.tmp $@
endif


%.gschema.xml.in: %.gschema.xml.in.in Makefile
	$(AM_V_GEN) $(SED) -e 's^\@GETTEXT_PACKAGE\@^$(GETTEXT_PACKAGE)^g' < $< > $@
#$(MKENUMS_GENERATED)

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
