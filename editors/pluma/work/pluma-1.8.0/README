General Information
===================

pluma is a small and lightweight UTF-8 text editor for the MATE
environment. Based on gedit, the text editor for the GNOME2 environment.

pluma is part of MATE and uses the latest GTK+ and MATE libraries.
Complete MATE integration is featured, with support for Drag and Drop (DnD)
from Caja (the MATE file manager), the use of the MATE help system,
the MATE Virtual File System and the MATE print framework.

pluma uses a Multiple Document Interface (MDI), which lets you edit more than
one document at the same time.

pluma supports most standard editing features, plus several not found in your
average text editor (plugins being the most notable of these).

pluma plugins may also be written in the python scripting language: to enable
python support you need the pygtk and mate-python-desktop bindings.

Although new features are always under development, currently pluma has:

    * Complete support for UTF-8 text
    * Syntax highlighting
    * Support for editing remote files
    * Search and Replace
    * Printing and Print Previewing Support
    * File Revert
    * A complete preferences interface
    * Configurable Plugin system, with optional python support


Some of the plugins, packaged and installed with pluma include, among others:

    * Word count
    * Spell checker
    * Change case of selected text
    * File Browser
    * Automatic snippet expansion
    * Sort
    * Insert Date/Time
    * External Tools
    * Tag list

Other external plugins are also available.


pluma is released under the GNU General Public License (GPL) version 2, see
the file 'COPYING' for more information.


The official web site is:

    http://www.mate-desktop.org/

You can download the latest pluma tarball from:

    https://pub.mate-desktop.org/releases/

Installation
============

pluma requires GTK+-2.16.x, GtkSourceView 2.4.x and MateConf libraries.
PyGobject 2.12.x, PyGtk 2.12.x and PyGtkSourceView 2.4.x are required to
enable python plugins support.

Simple install procedure:

  % gzip -cd mate-text-editor.tar.gz | tar xvf - 	# unpack the sources
  % cd mate-text-editor				# change to the toplevel directory
  % ./autogen.sh				# run the `configure' script
  % make					# build pluma
  [ Become root if necessary ]
  % make install				# install pluma


Running Tests
==================
Pluma has several test that can be run after compilation. Run them by issueing "make check". However there are a couple of requirements that need to be satified before they will pass.

* You need the gsettings schemas installed for some tests to be able to run.
* You need to mount sftp://localhost/ with gvfs-mount for one test to pass.

If test fail and you have setup the above correctly then please file a bug report as described below.

How to report bugs
==================

Bugs should be reported to the MATE bug tracking system.
(https://github.com/mate-desktop/pluma/issues). You will need to create an
account for yourself.

You can also report bugs using the MATE program bug-buddy.

In the bug report please include:

* Information about your system. For instance:

   - What operating system and version
   - What version of X
   - What version of the gtk+, glib and mate libraries
   - For Linux, what version of the C library

  And anything else you think is relevant.

* How to reproduce the bug.

* If the bug was a crash, the exact text that was printed out when the
  crash occurred.

* Further information such as stack traces may be useful, but is not
  necessary. If you do send a stack trace, and the error is an X error,
  it will be more useful if the stack trace is produced running the test
  program with the --sync command line option.


Patches
=======

Patches should also be submitted to github.com/mate-desktop/pluma. If the patch
fixes an existing bug, add the patch as an attachment to that bug
report.

Otherwise, enter a new bug report that describes the patch, and attach
the patch to that bug report.

Patches should be in unified diff form. (The -u option to GNU diff.)

If you are interested in helping us to develop pluma, please see the
file 'AUTHOR' for contact information and/or send a message to the pluma
mailing list. See also the file 'HACKING' for more detailed information.


  The pluma team.

